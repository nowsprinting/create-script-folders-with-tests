# Copyright (c) 2021-2023 Koji Hasegawa.
# This software is released under the MIT License.

name: Test

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: write-all
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion: # Available versions see: https://game.ci/docs/docker/versions
          - 2022.2.5f1

    steps:
      - name: Crete project for tests
        uses: nowsprinting/create-unity-project-action@v2
        with:
          project-path: UnityProject~

      - name: Checkout repository into created project
        uses: actions/checkout@v3
        with:
          submodules: false
          lfs: false
          path: UnityProject~/Packages/com.nowsprinting.create-script-folders-with-tests

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: |
          npm install -g openupm-cli
          openupm add -f com.unity.test-framework@1.3.2
          openupm add -f com.unity.testtools.codecoverage@1.2.2
        working-directory: ${{ env.CREATED_PROJECT_PATH }}

      - name: Set coverage assembly filters
        run: |
          assemblies=$(find ./Packages -name "*.asmdef" -maxdepth 3 | sed -e s/.*\\//\+/ | sed -e s/\\.asmdef// | sed -e s/^.*\\.Tests//)
          # shellcheck disable=SC2001,SC2048,SC2086
          echo "assembly_filters=$(echo ${assemblies[*]} | sed -e s/\ /,/g),+<assets>,-*.Tests" >> "$GITHUB_ENV"

      - name: Set license secret key
        run: echo "secret_key=UNITY_LICENSE_$(echo ${{ matrix.unityVersion }} | cut -c 1-4)" >> "$GITHUB_ENV"

      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ matrix.unityVersion }}  # Default is `auto`
          checkName: test result (${{ matrix.unityVersion }})
          projectPath: ${{ env.CREATED_PROJECT_PATH }}
          customParameters: -testCategory "!IgnoreCI"
          coverageOptions: generateAdditionalMetrics;generateTestReferences;generateHtmlReport;generateAdditionalReports;dontClear;assemblyFilters:${{ env.assembly_filters }}
          # see: https://docs.unity3d.com/Packages/com.unity.testtools.codecoverage@1.2/manual/CoverageBatchmode.html
        env:
          UNITY_LICENSE: ${{ secrets[env.secret_key] }}
        id: test

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults-Unity${{ matrix.unityVersion }}
          path: |
            ${{ steps.test.outputs.artifactsPath }}
            ${{ steps.test.outputs.coveragePath }}
        if: always()

  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - uses: Gamesight/slack-workflow-status@v1.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
